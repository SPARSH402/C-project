#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_FILE_NAME_LENGTH 100

struct file {
  char name[MAX_FILE_NAME_LENGTH];
  int size;
};

void print_file_list(struct file *files, int num_files) {
  for (int i = 0; i < num_files; i++) {
    printf("%s (%d bytes)\n", files[i].name, files[i].size);
  }
}

int main() {
  // Create a list of files.
  struct file files[100];
  int num_files = 0;

  // Add some files to the list.
  strcpy(files[num_files].name, "myfile.txt");
  files[num_files].size = 100;
  num_files++;

  strcpy(files[num_files].name, "anotherfile.txt");
  files[num_files].size = 200;
  num_files++;

  // Print the list of files.
  print_file_list(files, num_files);

  // Get the user's input.
  char filename[MAX_FILE_NAME_LENGTH];
  printf("Enter the name of the file you want to open: ");
  fgets(filename, MAX_FILE_NAME_LENGTH, stdin);

  // Find the file in the list.
  int file_index = -1;
  for (int i = 0; i < num_files; i++) {
    if (strcmp(files[i].name, filename) == 0) {
      file_index = i;
      break;
    }
  }

  // If the file was found, open it.
  if (file_index != -1) {
    FILE *fp = fopen(files[file_index].name, "r");
    if (fp != NULL) {
      // Read the file.
      char buffer[1024];
      while (fgets(buffer, 1024, fp) != NULL) {
        printf("%s", buffer);
      }

      // Close the file.
      fclose(fp);
    } else {
      printf("Could not open file.\n");
    }
  } else {
    printf("File not found.\n");
  }

  return 0;
}
